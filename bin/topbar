#!/bin/bash

#Layout
HEIGHT=16
BAR_H=8
BIGBAR_W=60
SMABAR_W=30

#Look and feel
CRIT="#d74b73"
BAR_FG="#60a0c0"
BAR_BG="#363636"
DZEN_FG="#9d9d9d"
DZEN_FG2="#5f656b"
DZEN_BG="#050505"
COLOR_ICON="#60a0c0"
COLOR_SEP="#007b8c"
FONT="-*-envy code r-medium-r-normal-*-11-*-*-*-*-*-*-*"

#Options
IFS='|' #internal field separator (conky)
CONKYFILE="$HOME/.config/conky/conkyrc"
ICONPATH="$HOME/etc/icons/"
INTERVAL=1

LEFT=(kernel cpu memory)
RIGHT=(disks filesystem alsa)

print_alsa() {
  local perc=$(amixer get Master | grep "Front Left:" | awk '{print $5}' | tr -d '[]%')
  local mute=$(amixer get Master | grep "Front Left:" | awk '{print $6}')

  if [[ $mute == "[off]" ]]; then
    echo -n "^fg($COLOR_ICON)^i($ICONPATH/volume_off.xbm) ^fg()off "
    gdbar -fg $CRIT -bg $BAR_BG -h $BAR_H -w $BIGBAR_W -s o -nonl <<<$perc
  else
    echo -n "^fg($COLOR_ICON)^i($ICONPATH/volume_on.xbm) ^fg()$perc% "
    gdbar -fg $BAR_FG -bg $BAR_BG -h $BAR_H -w $BIGBAR_W -s o -nonl <<<$perc
  fi
}

print_cpu() {
  echo -n "^fg($COLOR_ICON)^i($ICONPATH/cpu.xbm) ^fg()$CPULoad0% "
  gdbar -fg $BAR_FG -bg $BAR_BG -h $BAR_H -w $SMABAR_W -s vo -nonl <<<$CPULoad0
  echo -n " ^fg()$CPULoad1% "
  gdbar -fg $BAR_FG -bg $BAR_BG -h $BAR_H -w $SMABAR_W -s vo -nonl <<<$CPULoad1
  echo -n " ^fg()$CPULoad2% "
  gdbar -fg $BAR_FG -bg $BAR_BG -h $BAR_H -w $SMABAR_W -s vo -nonl <<<$CPULoad2
  echo -n " ^fg()$CPULoad3% "
  gdbar -fg $BAR_FG -bg $BAR_BG -h $BAR_H -w $SMABAR_W -s vo -nonl <<<$CPULoad3
  echo -n " ^fg()$CPULoad4% "
  gdbar -fg $BAR_FG -bg $BAR_BG -h $BAR_H -w $SMABAR_W -s vo -nonl <<<$CPULoad4
  echo -n " ^fg()$CPULoad5% "
  gdbar -fg $BAR_FG -bg $BAR_BG -h $BAR_H -w $SMABAR_W -s vo -nonl <<<$CPULoad5
  echo -n " ^fg()$CPULoad6% "
  gdbar -fg $BAR_FG -bg $BAR_BG -h $BAR_H -w $SMABAR_W -s vo -nonl <<<$CPULoad6
  echo -n " ^fg()$CPULoad7% "
  gdbar -fg $BAR_FG -bg $BAR_BG -h $BAR_H -w $SMABAR_W -s vo -nonl <<<$CPULoad7
}

print_memory() {
  echo -n "^fg($COLOR_ICON)^i($ICONPATH/memory.xbm) "
  echo -n "^fg()${MemUsed} "
  gdbar -fg $BAR_FG -bg $BAR_BG -h $BAR_H -w $SMABAR_W -s o -nonl <<<$MemPerc
  return
}

print_filesystem() {
  local pkgs=$(pacman -Q | wc -l)
  local proc=$(($(ps -A | wc -l) - 1))

  echo -n "^fg($COLOR_ICON)^i($ICONPATH/pc.xbm) "
  echo -n "^fg($DZEN_FG2)proc ^fg()$proc "
  echo -n "^fg($DZEN_FG2)pkgs ^fg()$pkgs"
}

print_disks() {
  local rfsp=$(df -h /     | tail -1 | awk -F' ' '{ print $5 }' | tr -d '%')
  local bfsp=$(df -h /home | tail -1 | awk -F' ' '{ print $5 }' | tr -d '%')

  (( $rfsp > 70 )) && rfsp="^fg($CRIT)"$rfsp"^fg()"
  (( $bfsp > 70 )) && bfsp="^fg($CRIT)"$bfsp"^fg()"

  echo -n "^fg($COLOR_ICON)^i($ICONPATH/file1.xbm) "
  echo -n "^fg($DZEN_FG2)root ^fg()$rfsp% "
  echo -n "^fg($DZEN_FG2)home ^fg()$bfsp%"
}

print_kernel() {
  echo -n " ^fg()$(uname -r)^fg(#007b8c)/^fg(#5f656b)$(uname -m) ^fg(#a488d9)| ^fg()$Uptime"
}

print_date() {
  echo -n "^fg()$(date '+%Y^fg(#444).^fg()%m^fg(#444).^fg()%d^fg(#007b8c)/^fg(#5f656b)%a ^fg(#a488d9)| ^fg()%H^fg(#444):^fg()%M^fg(#444):^fg()%S')"
}

print_sep() {
  echo -n " ^fg($COLOR_SEP)|^fg() "
}

print_arrow() {
  echo -n " ^fg(#a488d9)>^fg(#007b8c)>^fg(#444444)> "
}

format_segment() {
  while (( $# )); do
    print_$1
    (( $# > 1 )) && print_sep
    shift
  done
}

format_bar() {
  while true; do
    read CPULoad0 CPULoad1 CPULoad2 CPULoad3 CPULoad4 CPULoad5 CPULoad6 CPULoad7 CPUFreq MemUsed MemPerc Uptime
    format_segment ${LEFT[@]}
    echo -n "^pa(722)"
    format_segment ${RIGHT[@]}

    print_arrow
    print_date
    echo
  done
}

#Print all and pipe into dzen
conky -c $CONKYFILE -u $INTERVAL \
  | format_bar \
  | dzen2 -h $HEIGHT -fn $FONT -ta 'l' -bg $DZEN_BG -fg $DZEN_FG -p -e 'onstart=lower'

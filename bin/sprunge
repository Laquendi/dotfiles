#!/bin/bash

# Depends on curl, python, python-pygments

usage() {
  cat << HERE
USAGE:
  sprunge [files]
  sprunge < file
  piped_data | sprunge

OPTIONS:
  -h         Show this message
  -l --lang  Set the language manually

Upload data and fetch URL from http://sprunge.us.
HERE
  exit "${1:-0}"
}

declare -a urls=()
options=$(getopt -o hl: -l help,lang: -- "$@") || usage 1

eval set -- $options
while [ $# -gt 0 ]
do
  case $1 in
    -h|--help) usage  ;;
    -l|--lang) L="$2" ;;

    --) shift; break  ;;
    -*) echo >&2 "$0: error - unrecognized option $1"; usage 1 ;;
  esac
  shift
done

# the magic happens here
sprunge() {
  curl -s -F 'sprunge=<-' http://sprunge.us
}

# use python to attempt to detect the lang
pygment() {
  python << CODE
try:
	from pygments.lexers import get_lexer_for_filename
	print(get_lexer_for_filename('$1').aliases[0])
except:
	print('${L:-text}')
CODE
}

if [[ ! -t 0 || $# -eq 0 ]]; then
  # read from stdin
  url=$(cat | sprunge)
  urls=("${url/ /}?${L:-text}")
else
   # treat arguments as a list of files to upload
   for file in $@; do
     if [[ ! -f "$file" ]]; then
       echo >&2 "$file isn't a file"
       continue
     fi

     lang=$(pygment "$file")
     url=$(sprunge <"$file")
     urls+=("${url/ /}?$lang")
   done
fi

# output each url on its own line
for url in "${urls[@]}"; do
  echo "$url"
done

# send to clipboard if xclip is installed. Don't copy to clipboad
# if output is piped.
if [[ -t 1 ]] && type xclip &>/dev/null; then
  echo -n "${urls[@]}" | xclip -sel primary
  echo -n "${urls[@]}" | xclip -sel clipboard
fi

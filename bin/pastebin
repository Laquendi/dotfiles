#!/bin/bash
#
# Depends on curl, python, python-pygments
#
# Copyright (c) 2012 Simon Gomizelj

# Supported pastebins {{{1
bin_sprunge() {
  local url=$(curl -snF 'sprunge=@-' http://sprunge.us <&0)
  [[ -n $1 ]] && url+="?$1"
  echo ${url/ /}
}

bin_ix() {
  local url=$(curl -snF 'f:1=<-' http://ix.io <&0)
  [[ -n $1 ]] && url+="/$1"
  echo $url
}
# }}}

# set a default bin
bin="${DEFAULT_BIN:-ix}"

usage() {
  cat << HERE
usage: ${0##*/} [files]

 Options:
  -h          Show this message
  -t          Default to 'text' if no syntax is detected
  -l, --lang  Set the language manually
  -b, --bin   Set the pastebin to use

 Supported bins:
HERE
  for fn in $(compgen -A function bin_); do
    echo "  ${fn#bin_}"
  done
  exit ${1:-0}
}

options=$(getopt -o hl:b:t -l help,lang:,bin: -- "$@") || usage >&2 1

eval set -- $options
while (( $# > 0 )); do
  case $1 in
    -h|--help) usage          ;;
    -b|--bin)  bin="$2"       ;;
    -l|--lang) L="$2"         ;;
    -t)        L="${L:-text}" ;;

    --) shift; break ;;
    -*) echo >&2 "${0##*/}: error - unrecognized option $1"; usage >&2 1 ;;
  esac
  shift
done

# use python to attempt to detect the lang
pygment() {
  python << CODE
try:
	from pygments.lexers import get_lexer_for_filename
	print(get_lexer_for_filename('$1').aliases[0])
except:
	print('$L')
CODE
}

declare -a urls=()
add() {
  url=$(bin_$bin "${2:-$L}" <"$1" 2>/dev/null)
  if (( $? == 127 )); then
    echo >&2 "${0##*/}: bin \"$bin\" is not supported"
    exit 1
  fi
  echo "$url"; urls+=("$url")
}

if [[ ! -t 0 || $# -eq 0 ]]; then
  # read from stdin
  add /dev/stdin
else
  # treat arguments as a list of files to upload
  for file in $@; do
    if [[ ! -f "$file" ]]; then
      echo >&2 "warning: $file isn't a file"
      continue
    fi
    add "$file" "$(pygment "$file")"
  done
fi

# send to clipboard if xclip is installed. Don't copy to clipboad
# if output is piped.
if [[ -t 1 ]] && type xclip &>/dev/null; then
  echo -n ${urls[@]} | xclip -sel primary
  echo -n ${urls[@]} | xclip -sel clipboard
fi
